"use strict";(self.webpackChunkengineering_com=self.webpackChunkengineering_com||[]).push([[430],{430:(b,u,r)=>{r.r(u),r.d(u,{default:()=>_});var d=r(861);const o="panning",g=function(){var s=(0,d.Z)(function*(n){let e;const t=n.configObj.pref("lang");try{e=yield function(i){switch(i){case"./locale/en.js":return Promise.resolve().then(function(){return f});case"./locale/zh-CN.js":return Promise.resolve().then(function(){return p});default:return new Promise(function(c,a){("function"==typeof queueMicrotask?queueMicrotask:setTimeout)(a.bind(null,new Error("Unknown variable dynamic import: "+i)))})}}("./locale/".concat(t,".js"))}catch(l){console.warn("Missing translation (".concat(t,") for ").concat(o," - using 'en'")),e=yield Promise.resolve().then(function(){return f})}n.i18next.addResourceBundle(t,o,e.default)});return function(e){return s.apply(this,arguments)}}();var _={name:o,init(){var s=this;return(0,d.Z)(function*(){const n=s;yield g(n);const{svgCanvas:e}=n,{$id:t,$click:l}=e;return{name:n.i18next.t("".concat(o,":name")),callback(){const i="".concat(o,":buttons.0.title"),c=document.createElement("template");var a,m;c.innerHTML='\n        <se-button id="ext-panning" title="'.concat(i,'" src="panning.svg"></se-button>\n        '),a=t("tool_zoom"),m=c.content.cloneNode(!0),a.parentNode.insertBefore(m,a.nextSibling),l(t("ext-panning"),()=>{this.leftPanel.updateLeftPanel("ext-panning")&&e.setMode("ext-panning")})},mouseDown(){if("ext-panning"===e.getMode())return n.setPanning(!0),{started:!0}},mouseUp(){if("ext-panning"===e.getMode())return n.setPanning(!1),{keep:!1,element:null}}}})()}},f=Object.freeze({__proto__:null,default:{name:"Extension Panning",buttons:[{title:"Panning"}]}}),p=Object.freeze({__proto__:null,default:{name:"\u79fb\u52a8",buttons:[{title:"\u79fb\u52a8"}]}})}}]);